// // тема: Типы данных. Объявление переменных. 
// BigInt - большие данные (let a = 12415n) наборчисел, которые не имеют конечного значения;
// Symbol - идентификатор, уникальное значение (let a = Symbol() )
// String - строка или набор букв, которые записываются так ( let a = 'artem', let a = "artem", let a = '123', let a = '1+1' )
// Number - набор чисел, цифра ( let a = 1324, let a = 0 )
// Object - сущность, которая имеет в себе набор данных (
//   object [
//     ключ:значение;
//     ключ:значение;
//     ключ:значение;
//     ключ:значение;
//   ]
// )
// Boolean - логический тип данных, который имеет в себе ( 
//   true|false === 1|0
//  )
// Function - (object) набор данных и алгоритмов, которые могут быть переиспользованы и вызваны из вне тела функции.
// function имя(параметры) {
//   тело функции
// }

// let a = 5;
// let b = 2
// function summ(a, b) {
//   console.log(a + b);
// }

// NaN - not a number, не число (для проверки на число или не число), так же (let a = 1, let b = 'a')- в таком случае математические и сравнительные операции выдадут в консоли NaN. 
// null - ничего (let a, let b = 4) нельзя пустоту сложить с числом
// undefined - не определенное значение (let a) 

// +++++++++++++++++++++++++++++++++++++++++++++++++++++

// Переменная-именованый участок памяти. Все переменные которые объявляются они записываются в ячейку памяти под каким-то именем.
// переменная-это имя переменной (а), оператор (=), значение, то что идет после равно.

// let a = 1; она тоже меняет свое значение. Но видимость этой переменной ограничивается блоком кода

// function abc() {
//   let a = 5;
//   console.log(a); // 5
// }
// console.log(a); // ReferenceError


// var b = 3; сама переменная имеет возмость менять свое значение и она видна в блоке функции и за ее пределами. 

// function abc() {
//   var a = 5;
//   console.log(a); // 5
// }
// console.log(a); // 5


// const c = 4; - константа, переменная ,которая создается посредством ключевого слова const не имеет возмости менять свое значение.



// Оператор - это то, что находится между двума операндами.
// let a = 4; (присваивание)
// let b = a; (присваивание)
// a > b; (сравнение) (бинарный оператор)
// a < b; (сравнение) (бинарный оператор)
// a >= b (сравнение) (бинарный оператор)
// a <= b (сравнение) (бинарный оператор)
// a == b; (сравнение) сравнение операндов не строгое, let a = '12', let b = 12, в таком случае переменные будут равны. Сравнивает без учета типа данных.  (бинарный оператор)
// a === b (сравнение) строгое сравнение, сравнивает и значение и тип данных этих значений. (бинарный оператор) 
// a + b (математические операции) (бинарный оператор)
// a - b (математические операции) (бинарный оператор)
// a / b (математические операции) (бинарный оператор)
// a * b (математические операции) (бинарный оператор)
// a ** b (математические операции) (бинарный оператор)
// a % b (математические операции) ответ сам остаток
// a++ (математические операции) инкремент  a + 1, если а = 5, то 5 + 1 постфиксная форма (унарный оператор)
// ++a (математические операции)  1 + a , 1 + 5 префиксная форма (унарный оператор)
// --a (математические операции)  дeкремент  1 - a (унарный оператор)
// a-- (математические операции)  a - 1 (унарный оператор)
// +a (математические операции) let  a = '12', console.log(+a); // 12 - как число, а не как строку (унарный оператор)
// a += b (математические операции)  (бинарный оператор)
// let n = 2; 
// n += 5; // теперь n = 7 (работает как n = n + 5)
// n *= 5 + 3 // (сначала выполнится правая часть, выражение идентично n *= 8, n = n * 8)
// a *= b (математические операции)
// n *= 2; // теперь n = 14 (работает как n = n * 2)

// & - и
// | - или
// ^ - исключающие или
// ~ - не
// << - левый сдвиг
// >> - правый сдвиг
// >>> - правый сдвиг с заполнением нулями
// , - разделителб нескольких выражений 
// for (a = 1, b = 3, c = a * b; a < 10; a++) {
//   ...
//  }


// let messegeOpenWindow = 'You open window'; 
// function dropMenu (a) {
//   тело
// }

// Операторы, типы данных.

// const menu = document.querySelector('#item__category--list--noactive');
// const dropMenu = 0;
// const clickMenu = menu.addEventListener('click', dropMenu);

// let a = 123;
// console.log('let a = 123;', typeof(a));
// let b = 'ass';
// console.log('let b = "ass";', typeof(b));
// let c = true;
// let c1 = false;
// console.log('let c = true;', typeof(c));
// console.log('let c1 = false;', typeof(c1));
// let d;
// console.log('let d', typeof(d))
// let e = Date.now();
// console.log('let e = Date.now();', typeof(e), Symbol(e));
// function func(event) {
//   console.log('function func', typeof(func));
// };
// func();
// let objectList = {
//   key:Date.now()
// };
// console.log('Object', typeof(objectList))


// console.log(a-b);

// let a = String(123);
// let b = 'qwerty';
// let c = Number('123');
// console.log(a, typeof(a));

// console.log(a, typeof(a));
// console.log(c, typeof(c));

// let a = Boolean(1);
// let b = Boolean(0);
// console.log(a, typeof(a));
// console.log(b, typeof(b));


// let z = Boolean();
// // let x = Boolean('sdfsdf');
// console.log(z, typeof(z));
// // console.log(x, typeof(x));
// // '' = 0 = false = null = NaN = undefined = (), 'asdasd' = 1 = true = Object = [];


// let a = 5;
// let b = 6;

// if (a > b) {
//   console.log('a > b');
// } else if (a < b) {
//   console.log('a < b');
// };

// if (a === 5) console.log(true);

// console.log(a < b ? 'О да нига это так':'о нет нига это не так'); тернарный оператор

// if (1) {

// };
// if (0) {

// };


// Логические операторы

// || - или
// ||= - присваивание с или
// && - и
// &&= - присваивание и 
// ! - не
// ?? - нулевое слияние

// let a = undefined;
// let b = null;

// console.log(a != b);

// for (let a = 2; a <= 10; a++) {
//   if (a % 2 == 1) continue;
//   alert(a);
// };

// for (let i = 0; i < 3; i++) {
//   alert( `number ${i}!` );
// }

// let i = 0
// while (i < 3) {
//   alert(`number ${i}!`)
//   i++
// };

// let a = 5;
// let b = 2;

// switch (a * b) {
//   case 5:
//     alert('5');
//     break;
//   case 8:
//     alert('8');
//     break;
//   case 10:
//     alert('10');
//     break;
//   default:
//     alert('ни одного  совпадения');
// };

// function checkAge(age) {
//   if (age >= 18) {
//     return true;
//   } else {
//     return confirm('А родители разрешили?');
//   }
// }

// let age = prompt('Сколько вам лет?', 18);

// if ( checkAge(age) ) {
//   alert( 'Доступ получен' );
// } else {
//   alert( 'Доступ закрыт' );
// }